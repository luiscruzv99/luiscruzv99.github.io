import{_ as n}from"./preload-helper-aa6bc0ce.js";const e=async()=>{const s=Object.entries(Object.assign({"/src/routes/blog/blogEntries/changelog_0.2.md":()=>n(()=>import("./changelog_0.2-9a4137e6.js"),["changelog_0.2-9a4137e6.js","index-2ce92430.js","blog-dd810baa.js","../assets/blog-657e27b9.css"],import.meta.url),"/src/routes/blog/blogEntries/making_of.md":()=>n(()=>import("./making_of-ad7b7423.js"),["making_of-ad7b7423.js","index-2ce92430.js","blog-dd810baa.js","../assets/blog-657e27b9.css"],import.meta.url)}));return{postContents:await Promise.all(s.map(async([a,r])=>{const{metadata:c}=await r(),i="/blog"+a.slice(28,-3);return{meta:c,path:i}}))}},g=async()=>{const{postContents:t}=await e();return{orderedPosts:t.sort((o,a)=>new Date(a.meta.date)-new Date(o.meta.date))}},m=async()=>{const{orderedPosts:t}=await g();return{last:t[0]}},d=async()=>{const{postContents:t}=await e();return{tags:[...new Set(t.flatMap(o=>o.meta.tags))]}},p=async t=>{const{postContents:s}=await e();return{taggedPosts:s.filter(a=>a.meta.tags.includes(t))}};export{p as a,d as g,m as l,g as o};
